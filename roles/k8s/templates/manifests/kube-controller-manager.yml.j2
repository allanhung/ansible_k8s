apiVersion: v1
kind: Pod
metadata:
  annotations:
    scheduler.alpha.kubernetes.io/critical-pod: ""
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager
  namespace: kube-system
spec:
  hostNetwork: true
  priorityClassName: system-cluster-critical
  containers:
  - name: kube-controller-manager
    image: k8s.gcr.io/kube-controller-manager-amd64:v{{ pillar.k8s_common.version }}
    command:
      - kube-controller-manager
      - --v={{ pillar.k8s_comp.controller_manager.log_level }}
      - --logtostderr=true
      - --address=127.0.0.1
      - --root-ca-file={{ pillar.ca_common.cert_dir }}/k8s_ca.pem
      - --cluster-signing-cert-file={{ pillar.ca_common.cert_dir }}/k8s_ca.pem
      - --cluster-signing-key-file={{ pillar.ca_common.cert_dir }}/k8s_ca-key.pem
      - --service-account-private-key-file={{ pillar.ca_common.cert_dir }}/sa.key
      - --kubeconfig={{ pillar.k8s_common.conf_dir }}/controller_manager.conf
      - --leader-elect=true
      - --use-service-account-credentials=true
      - --node-monitor-grace-period=40s
      - --node-monitor-period=5s
      - --pod-eviction-timeout=2m0s
      - --controllers=*,bootstrapsigner,tokencleaner
      - --allocate-node-cidrs=true
      - --cluster-cidr={{ pillar.k8s_network.cluster_cidr }}
      {% if pillar.k8s_comp.controller_manager.feature_gates != '' -%}
      - --feature-gates={{ pillar.k8s_comp.controller_manager.feature_gates }}
      {% endif -%}
      - --node-cidr-mask-size=24
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 10252
        scheme: HTTP
      initialDelaySeconds: 15
      timeoutSeconds: 15
    resources:
      requests:
        cpu: 200m
    volumeMounts:
    - mountPath: {{ pillar.ca_common.cert_dir }}
      name: ca-certs
      readOnly: true
    - mountPath: {{ pillar.k8s_common.conf_dir }}/controller_manager.conf
      name: kubeconfig
      readOnly: true
    - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      name: flexvolume-dir
  volumes:
  - hostPath:
      path: {{ pillar.ca_common.cert_dir }}
      type: DirectoryOrCreate
    name: ca-certs
  - hostPath:
      path: {{ pillar.k8s_common.conf_dir }}/controller_manager.conf
      type: File
    name: kubeconfig
  - hostPath:
      path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
      type: DirectoryOrCreate
    name: flexvolume-dir
